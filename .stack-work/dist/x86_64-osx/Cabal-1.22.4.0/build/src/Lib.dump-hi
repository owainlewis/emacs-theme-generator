
==================== FINAL INTERFACE ====================
2016-04-02 09:28:21.330314 UTC

interface emacs_L13ERIXmNDbKFGNBBjFJoE:Lib 7102
  interface hash: 39ed0d849485ff9d6931a6d433a5b7bd
  ABI hash: 98358d63a2f28e7f73409d33392a09ab
  export-list hash: dcdba7ffe4ffe3662d3a9527b4980a66
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 56b9a755d22be00f2eba50f3628a69c7
  sig of: Nothing
  used TH splices: False
  where
exports:
  Lib.compileTemplate
  Lib.Palette{Lib.Palette Lib.bg1 Lib.bg2 Lib.bg3 Lib.bg4 Lib.comment Lib.const Lib.fg1 Lib.fg2 Lib.fg3 Lib.fg4 Lib.func Lib.keyword Lib.str Lib.types Lib.var Lib.warning}
module dependencies:
package dependencies: array-0.5.1.0@array_E0sTtauuKsGDLZoT7lTbgZ
                      base-4.8.1.0 bytestring-0.10.6.0@bytes_6elQVSg5cWdFrvRnfxTUrH
                      containers-0.5.6.2@conta_LKCPrTJwOTOLk4OU37YmeN
                      deepseq-1.4.1.1@deeps_LbCWUlehDDeLxurARKDH5o ghc-prim-0.4.0.0
                      integer-gmp-1.0.0.0 regex-base-0.93.2@regex_2j0nR3pc4q24HZdEmShSMX
                      regex-posix-0.95.2@regex_6Fv9CTZU9JMB52PT4YRZTl
                      regex-compat-0.95.1@regex_LfevtAmd1jA93E87NZxMhh
orphans: base-4.8.1.0:GHC.Base base-4.8.1.0:GHC.Float
         regex-base-0.93.2@regex_2j0nR3pc4q24HZdEmShSMX:Text.Regex.Base.Context
         regex-posix-0.95.2@regex_6Fv9CTZU9JMB52PT4YRZTl:Text.Regex.Posix.ByteString
         regex-posix-0.95.2@regex_6Fv9CTZU9JMB52PT4YRZTl:Text.Regex.Posix.ByteString.Lazy
         regex-posix-0.95.2@regex_6Fv9CTZU9JMB52PT4YRZTl:Text.Regex.Posix.Sequence
         regex-posix-0.95.2@regex_6Fv9CTZU9JMB52PT4YRZTl:Text.Regex.Posix.String
family instance modules: base-4.8.1.0:Control.Applicative
                         base-4.8.1.0:Data.Either base-4.8.1.0:Data.Functor.Identity
                         base-4.8.1.0:Data.Monoid base-4.8.1.0:Data.Type.Equality
                         base-4.8.1.0:Data.Void base-4.8.1.0:GHC.Exts
                         base-4.8.1.0:GHC.Generics
                         containers-0.5.6.2@conta_LKCPrTJwOTOLk4OU37YmeN:Data.Map.Base
                         containers-0.5.6.2@conta_LKCPrTJwOTOLk4OU37YmeN:Data.Sequence
                         containers-0.5.6.2@conta_LKCPrTJwOTOLk4OU37YmeN:Data.Set.Base
import  -/  base-4.8.1.0:Data.Monoid bd73caba6e77f9944cb89ef5bec300c6
import  -/  base-4.8.1.0:GHC.Base 1db77db5dae73d8c424c85b09fbadb89
import  -/  base-4.8.1.0:GHC.Show b8c65ca3124f92a166c9f05120382442
import  -/  base-4.8.1.0:Prelude 518f762991bc287d78f21a73c974da1f
import  -/  containers-0.5.6.2@conta_LKCPrTJwOTOLk4OU37YmeN:Data.Map 5e4cbf1ca2e6c8cfaecf2b4e95371357
import  -/  containers-0.5.6.2@conta_LKCPrTJwOTOLk4OU37YmeN:Data.Map.Base 7ea108dc1481cad0b32efe810e49ad43
import  -/  ghc-prim-0.4.0.0:GHC.Classes e1f4ff80f7b5262008a595d29986fb18
import  -/  regex-compat-0.95.1@regex_LfevtAmd1jA93E87NZxMhh:Text.Regex 0e1bd579e48fe8b7432442e2e5ca459b
4c6fb126a7ce6ba228c1a43587081df5
  $fShowPalette :: GHC.Show.Show Lib.Palette
  DFunId[0]
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Lib.Palette
                  Lib.$fShowPalette_$cshowsPrec
                  Lib.$fShowPalette_$cshow
                  Lib.$fShowPalette_$cshowList -}
4c6fb126a7ce6ba228c1a43587081df5
  $fShowPalette1 :: Lib.Palette -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (\ w :: Lib.Palette w1 :: GHC.Base.String ->
                 case w of ww { Lib.Palette ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ww9 ww10 ww11 ww12 ww13 ww14 ww15 ww16 ->
                 Lib.$w$cshowsPrec
                   0
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   ww7
                   ww8
                   ww9
                   ww10
                   ww11
                   ww12
                   ww13
                   ww14
                   ww15
                   ww16
                   w1 }) -}
4c6fb126a7ce6ba228c1a43587081df5
  $fShowPalette_$cshow :: Lib.Palette -> GHC.Base.String
  {- Arity: 1,
     Strictness: <S,1*U(1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ x :: Lib.Palette ->
                 Lib.$fShowPalette_$cshowsPrec
                   GHC.Show.shows18
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
4c6fb126a7ce6ba228c1a43587081df5
  $fShowPalette_$cshowList :: [Lib.Palette] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ Lib.Palette
                   Lib.$fShowPalette1) -}
4c6fb126a7ce6ba228c1a43587081df5
  $fShowPalette_$cshowsPrec ::
    GHC.Types.Int -> Lib.Palette -> GHC.Show.ShowS
  {- Arity: 3,
     Strictness: <S,1*U(U)><S,1*U(1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U)><L,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ w :: GHC.Types.Int w1 :: Lib.Palette w2 :: GHC.Base.String ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w1 of ww2 { Lib.Palette ww3 ww4 ww5 ww6 ww7 ww8 ww9 ww10 ww11 ww12 ww13 ww14 ww15 ww16 ww17 ww18 ->
                 Lib.$w$cshowsPrec
                   ww1
                   ww3
                   ww4
                   ww5
                   ww6
                   ww7
                   ww8
                   ww9
                   ww10
                   ww11
                   ww12
                   ww13
                   ww14
                   ww15
                   ww16
                   ww17
                   ww18
                   w2 } }) -}
768ea8031bdec2cdda839ca1f9d09d58
  $w$cshowsPrec ::
    GHC.Prim.Int#
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
  {- Arity: 18,
     Strictness: <L,U><L,1*U><L,1*U><L,1*U><L,1*U><L,1*U><L,1*U><L,1*U><L,1*U><L,1*U><L,1*U><L,1*U><L,1*U><L,1*U><L,1*U><L,1*U><L,1*U><L,U>,
     Inline: [0] -}
4c6fb126a7ce6ba228c1a43587081df5
  data Palette
    = Palette {fg1 :: GHC.Base.String,
               fg2 :: GHC.Base.String,
               fg3 :: GHC.Base.String,
               fg4 :: GHC.Base.String,
               bg1 :: GHC.Base.String,
               bg2 :: GHC.Base.String,
               bg3 :: GHC.Base.String,
               bg4 :: GHC.Base.String,
               keyword :: GHC.Base.String,
               const :: GHC.Base.String,
               comment :: GHC.Base.String,
               func :: GHC.Base.String,
               str :: GHC.Base.String,
               types :: GHC.Base.String,
               var :: GHC.Base.String,
               warning :: GHC.Base.String}
ffed79f7cf216c84d4abd518a95cb6a3
  bg1 :: Lib.Palette -> GHC.Base.String
  RecSel Lib.Palette
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLSLLLLLLLLLLL),1*U(A,A,A,A,1*U,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: Lib.Palette ->
                 case ds of wild { Lib.Palette ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ->
                 ds5 }) -}
7c74b8431dfc90b5c73cf91e2886a100
  bg2 :: Lib.Palette -> GHC.Base.String
  RecSel Lib.Palette
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLSLLLLLLLLLL),1*U(A,A,A,A,A,1*U,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: Lib.Palette ->
                 case ds of wild { Lib.Palette ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ->
                 ds6 }) -}
80289a54dd9004f2ee6569856033c90f
  bg3 :: Lib.Palette -> GHC.Base.String
  RecSel Lib.Palette
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLSLLLLLLLLL),1*U(A,A,A,A,A,A,1*U,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: Lib.Palette ->
                 case ds of wild { Lib.Palette ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ->
                 ds7 }) -}
909790469d345d50e6a3cd4258bf4746
  bg4 :: Lib.Palette -> GHC.Base.String
  RecSel Lib.Palette
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLSLLLLLLLL),1*U(A,A,A,A,A,A,A,1*U,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: Lib.Palette ->
                 case ds of wild { Lib.Palette ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ->
                 ds8 }) -}
dd2cd5fa5c6809a7ec930f8e0cfc6f25
  comment :: Lib.Palette -> GHC.Base.String
  RecSel Lib.Palette
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLSLLLLL),1*U(A,A,A,A,A,A,A,A,A,A,1*U,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: Lib.Palette ->
                 case ds of wild { Lib.Palette ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ->
                 ds11 }) -}
9fc0feaf0e2dcb4661715f0d2ceaf220
  compileTemplate ::
    GHC.Base.String
    -> Data.Map.Base.Map GHC.Base.String GHC.Base.String
    -> GHC.Base.String
  {- Arity: 2, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ template :: GHC.Base.String
                   subs :: Data.Map.Base.Map GHC.Base.String GHC.Base.String ->
                 Lib.compileTemplate_go10 template subs) -}
936b7fb79b049fae47e7991fa86e4582
  compileTemplate_go10 ::
    GHC.Base.String
    -> Data.Map.Base.Map GHC.Base.String GHC.Base.String
    -> GHC.Base.String
  {- Arity: 2, Strictness: <S,1*U><S,1*U> -}
09bf92d85839a49fe24a92ff88d026e5
  const :: Lib.Palette -> GHC.Base.String
  RecSel Lib.Palette
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLSLLLLLL),1*U(A,A,A,A,A,A,A,A,A,1*U,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: Lib.Palette ->
                 case ds of wild { Lib.Palette ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ->
                 ds10 }) -}
ea8fbe94daa023e4bc439c8f1f33c35a
  fg1 :: Lib.Palette -> GHC.Base.String
  RecSel Lib.Palette
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(SLLLLLLLLLLLLLLL),1*U(1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: Lib.Palette ->
                 case ds of wild { Lib.Palette ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ->
                 ds1 }) -}
bf9e513ec4670e3e6bdfba36ccb6b121
  fg2 :: Lib.Palette -> GHC.Base.String
  RecSel Lib.Palette
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LSLLLLLLLLLLLLLL),1*U(A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: Lib.Palette ->
                 case ds of wild { Lib.Palette ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ->
                 ds2 }) -}
d951bcbeceb92003df2592fced735197
  fg3 :: Lib.Palette -> GHC.Base.String
  RecSel Lib.Palette
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLSLLLLLLLLLLLLL),1*U(A,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: Lib.Palette ->
                 case ds of wild { Lib.Palette ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ->
                 ds3 }) -}
73a613d238d8b11197c6b05dd16394a5
  fg4 :: Lib.Palette -> GHC.Base.String
  RecSel Lib.Palette
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLSLLLLLLLLLLLL),1*U(A,A,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: Lib.Palette ->
                 case ds of wild { Lib.Palette ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ->
                 ds4 }) -}
443402d22586116d8ee251be85987484
  func :: Lib.Palette -> GHC.Base.String
  RecSel Lib.Palette
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLSLLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,1*U,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: Lib.Palette ->
                 case ds of wild { Lib.Palette ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ->
                 ds12 }) -}
1392614b4e0c54c6f61e8f15bb382185
  keyword :: Lib.Palette -> GHC.Base.String
  RecSel Lib.Palette
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLSLLLLLLL),1*U(A,A,A,A,A,A,A,A,1*U,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: Lib.Palette ->
                 case ds of wild { Lib.Palette ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ->
                 ds9 }) -}
68cced3a55754c5105807f2e967a4aad
  str :: Lib.Palette -> GHC.Base.String
  RecSel Lib.Palette
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLSLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,1*U,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: Lib.Palette ->
                 case ds of wild { Lib.Palette ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ->
                 ds13 }) -}
c36f9e32d8aad53cb8c414a9d0777b1b
  types :: Lib.Palette -> GHC.Base.String
  RecSel Lib.Palette
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLSLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,1*U,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: Lib.Palette ->
                 case ds of wild { Lib.Palette ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ->
                 ds14 }) -}
119c36170b502176367f6ac50a706c49
  var :: Lib.Palette -> GHC.Base.String
  RecSel Lib.Palette
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLSL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: Lib.Palette ->
                 case ds of wild { Lib.Palette ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ->
                 ds15 }) -}
30f9456182d74dde25186c38a500d9ae
  warning :: Lib.Palette -> GHC.Base.String
  RecSel Lib.Palette
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLLS),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: Lib.Palette ->
                 case ds of wild { Lib.Palette ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ->
                 ds16 }) -}
instance GHC.Show.Show [Lib.Palette] = Lib.$fShowPalette
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

